#  Gemini
# I want to create a Home Assistant blueprint that will notify my devices if a temperature sensor has its value go outside a configured low or high temperature range. Provide me the blueprint's yaml. Include inputs for the list of sensors, and the temperature range

blueprint:
  name: Temperature Range Alert with Multiple Notifications
  description: Trigger notifications to multiple devices and send emails when a temperature sensor goes outside a specified range.
  domain: automation

  input:
    temp_sensors:
      name: Temperature Sensors
      description: Select the temperature sensors to monitor.
      selector:
        entity:
          domain: sensor
          device_class: temperature
    low_temp:
      name: Low Temperature Threshold
      description:  Trigger notification if the temperature falls below this value.
      selector:
        number:
          min: -50  # Adjust minimum, maximum as needed
          max: 120
          unit_of_measurement: "°C"  # Or '°F' if you prefer
          mode: box
    high_temp:
      name: High Temperature Threshold
      description: Trigger notification if the temperature exceeds this value.
      selector:
        number:
          min: -50
          max: 120
          unit_of_measurement: "°C"
          mode: box
    notification_targets:
      name: Notification Targets
      description: Select devices for notifications and enter email addresses (comma-separated).
      default: [] # Optional default
      selector:
        target: {}

trigger:
  - platform: state
    entity_id: !input temp_sensors
    for:  # Optional delay to prevent excessive notifications
      minutes: 5

condition:
  - condition: or
    conditions:
      - condition: numeric_state
        entity_id: !input temp_sensors
        below: !input low_temp
      - condition: numeric_state
        entity_id: !input temp_sensors
        above: !input high_temp

action:
  - choose: []  # Empty 'choose' to start building action groups
    default: [] # Actions to execute if no notification choice matches

  # Notification to Devices
  - condition: template
      value_template: "{{ 'mobile_app' in trigger.to_state.attributes.device_class }}"
    sequence:
      - service: notify.{{ trigger.to_state.attributes.device_class }}
        data:
          message: >-
            ⚠️ Temp Alert! Sensor {{ trigger.to_state.name }} reports
            {{ trigger.to_state.state }}°C - outside the range
            ({{ input_number.low_temp.state }}°C - {{ input_number.high_temp.state }}°C).

  # Notification via Email
  # - condition: template
  #     value_template: "{{ trigger.to_state.attributes.device_class == 'email' }}"
  #   sequence:
  #     - service: notify.notify  # Adjust if you have dedicated email notification service
  #       data:
  #         title: "Temperature Alert!"
  #         message: >-
  #           Sensor {{ trigger.to_state.name }} reports
  #           {{ trigger.to_state.state }}°C - outside the range
  #           ({{ input_number.low_temp.state }}°C - {{ input_number.high_temp.state }}°C).
